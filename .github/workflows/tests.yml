name: Django Docker Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  test_django_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Create environment files
        run: |
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > .env-prod
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> .env-prod
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env-prod
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env-prod
          echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" >> .env-prod
          echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env-prod
          echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env-prod
          echo "DJANGO_CRSF_TRUSTED_ORIGINS=${{ secrets.DJANGO_CRSF_TRUSTED_ORIGINS }}" >> .env-prod
          echo "SQL_ENGINE=${{ secrets.SQL_ENGINE }}" >> .env-prod
          echo "SQL_USER=${{ secrets.SQL_USER }}" >> .env-prod
          echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> .env-prod
          echo "SQL_DB=${{ secrets.SQL_DB }}" >> .env-prod
          echo "SQL_HOST=${{ secrets.SQL_HOST }}" >> .env-prod
          echo "SQL_PORT=${{ secrets.SQL_PORT }}" >> .env-prod
          echo "DATABASE=${{ secrets.DATABASE }}" >> .env-prod
          echo "DJANGO_ENV=${{ secrets.DJANGO_ENV }}" >> .env-prod
          echo "DJANGO_DEBUG=${{ secrets.DJANGO_DEBUG }}" >> .env-prod
          echo "USE_S3=${{ secrets.USE_S3 }}" >> .env-prod
          echo "USE_DATABASE_AWS=${{ secrets.USE_DATABASE_AWS }}" >> .env-prod
          
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env-prod-db
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env-prod-db
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env-prod-db
                  
      - name: Install legacy docker-compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }} 
          
      - name: Display .env-prod file
        run: |
          echo "*** This location is $(pwd)/"
          echo "*** Contents of .env-prod"
          cat .env-prod
               
          echo "*** Contents of .env-prod-db"
          cat .env-prod-db
      
      - name: Final Build Stage and Run docker-compose
        working-directory: .
        run: docker-compose -f docker-compose-prod.yml up -d --build
      
      - name: Print Django settings info
        run: docker-compose -f docker-compose-prod.yml run --rm --entrypoint "" -e DJANGO_SETTINGS_MODULE=donald_project.settings web python -c "from django.conf import settings; print('STATIC_ROOT, etc'); print(settings.STATIC_ROOT); print(settings.SETTINGS_MODULE); print(settings.DEBUG)"
      
      # - name: Wait for Django app to be ready
      #  run: |
      #    for i in {1..10}; do
      #    curl --fail http://localhost:1337/ && break
      #    echo "Waiting for Django app..."
      #    sleep 10
      #    done

      - name: Show Django logs
        run: docker-compose -f docker-compose-prod.yml logs web
